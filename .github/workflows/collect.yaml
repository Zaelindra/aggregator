name: Collect
on:
  # 每周日 00:00 运行一次
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

env:
  # 时区
  TZ: Asia/Shanghai

  # GitHub Access Token
  GIST_PAT: ${{ secrets.GIST_PAT }}

  # GitHub 用户名和 Gist ID，格式为 'username/gist_id'
  GIST_LINK: ${{ secrets.GIST_LINK }}

  # 自定义链接列表
  CUSTOMIZE_LINK: ${{ secrets.CUSTOMIZE_LINK }}

  # 是否启用特殊协议
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install Dependencies
        run: pip3 install -r requirements.txt

      - name: Check Environment Variables
        run: |
          if [ -z "$GIST_PAT" ]; then
              echo "Error: environment 'GIST_PAT' cannot be empty"
              exit 1
          fi

          if [ -z "$GIST_LINK" ]; then
              echo "Error: environment 'GIST_LINK' cannot be empty"
              exit 1
          fi

          LINK_PARTS=$(echo "$GIST_LINK" | awk -F'/' 'NF==2 && $1!="" && $2!=""')
          if [ -z "$LINK_PARTS" ]; then
              echo "Error: environment 'GIST_LINK' is not valid, should be 'username/gist_id' format"
              exit 1
          fi

      - name: Collect Data
        run: python -u subscribe/collect.py --all --overwrite --skip

      - name: Send WeChat Notification
        if: success() || failure()  # 成功或失败都发送消息
        env:
          WECHAT_CORP_ID: ${{ secrets.WECHAT_CORP_ID }}
          WECHAT_AGENT_ID: ${{ secrets.WECHAT_AGENT_ID }}
          WECHAT_CORP_SECRET: ${{ secrets.WECHAT_CORP_SECRET }}
          WECHAT_PROXY_URL: ${{ secrets.WECHAT_PROXY_URL }}
        run: |
          STATUS="Workflow *${{ github.workflow }}* completed with status: ${{ job.status }}"
          
          # 获取企业微信 Access Token
          PROXY_OPTION=""
          if [ -n "$WECHAT_PROXY_URL" ]; then
              PROXY_OPTION="--proxy $WECHAT_PROXY_URL"
          fi
          
          TOKEN_RESPONSE=$(curl -s -G $PROXY_OPTION \
            "https://qyapi.weixin.qq.com/cgi-bin/gettoken" \
            --data-urlencode "corpid=$WECHAT_CORP_ID" \
            --data-urlencode "corpsecret=$WECHAT_CORP_SECRET")
          ACCESS_TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.access_token')

          # 检查是否获取到 Access Token
          if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" == "null" ]; then
              echo "Error: Failed to retrieve access token"
              exit 1
          fi

          # 构建企业微信消息内容
          WECHAT_MESSAGE_BODY=$(jq -n \
            --arg content "$STATUS" \
            --arg agentid "$WECHAT_AGENT_ID" \
            '{"touser": "@all", "msgtype": "text", "agentid": $agentid, "text": {"content": $content}}')

          # 发送企业微信消息
          curl -s -X POST "https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=$ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$WECHAT_MESSAGE_BODY" $PROXY_OPTION
