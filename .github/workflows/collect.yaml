name: Collect
on:
  # 每周一 00:00 执行一次
  schedule:
    - cron: "0 0,8,16 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

env:
  # 时区设置
  TZ: Asia/Shanghai

  # GitHub访问令牌
  GIST_PAT: ${{ secrets.GIST_PAT }}

  # GitHub用户名和gist ID，用"/"分隔
  GIST_LINK: ${{ secrets.GIST_LINK }}

  # 自定义机场列表的URL
  CUSTOMIZE_LINK: ${{ secrets.CUSTOMIZE_LINK }}

  # 是否启用特殊协议，如vless hysteria2和hysteria
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install
        run: pip3 install -r requirements.txt

      - name: Check
        run: |
          if [ -z "$GIST_PAT" ]; then
              echo "Error: environment 'GIST_PAT' cannot be empty"
              exit 1
          fi

          if [ -z "$GIST_LINK" ]; then
              echo "Error: environment 'GIST_LINK' cannot be empty"
              exit 1
          fi

          LINK_PARTS=$(echo "$GIST_LINK" | awk -F'/' 'NF==2 && $1!="" && $2!=""')
          if [ -z "$LINK_PARTS" ]; then
              echo "Error: environment 'GIST_LINK' is not valid, should be 'username/gist_id' format"
              exit 1
          fi

      - name: Collect
        run: python -u subscribe/collect.py --all --overwrite --skip > collect_output.log

      - name: Parse Proxy Count
        id: parse_proxy_count
        run: |
          # 从日志文件中提取代理数量
          proxy_count=$(grep -oP 'found \K\d+(?= proxies)' collect_output.log)
          echo "代理数量: $proxy_count"

          # 将代理数量和时间戳设置为环境变量，以便在后续步骤中访问
          echo "PROXY_COUNT=$proxy_count" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date)" >> $GITHUB_ENV

      - name: Send Proxy Update with Image to Telegram
        if: success()
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          # 获取随机图片 URL
          image_url=$(curl -s https://api.miaomc.cn/image/get | jq -r .url)
          
          # 构建推送消息
          message="代理更新成功！🚀\n\n- 找到的代理数量：*${{ env.PROXY_COUNT }}*\n- 更新时间：*${{ env.TIMESTAMP }}*\n- 推送状态：*成功* ✅"
          
          # 使用 curl 发送图文推送
          curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendPhoto" \
            -F chat_id="$CHAT_ID" \
            -F photo="$image_url" \
            -F caption="$message" \
            -F parse_mode="Markdown"
